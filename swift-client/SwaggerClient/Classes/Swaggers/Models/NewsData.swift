//
// NewsData.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


open class NewsData: JSONEncodable {
    /** 新闻的ID */
    open var nid: Int64?
    /** 新闻的原地址 */
    open var url: String?
    /** 用户评论信息地址 */
    open var docid: String?
    /** 新闻标题 */
    open var title: String?
    /** 新闻发生时间 */
    open var ptime: String?
    /** 来源名称 */
    open var pname: String?
    /** 新闻来源地址 */
    open var purl: String?
    /** 频道ID */
    open var channel: Int32?
    /** 收藏数 */
    open var collect: Int32?
    /** 关心数 */
    open var concern: Int32?
    /** 评论数目 */
    open var comment: Int32?
    /** 图片类型 */
    open var style: Int32?
    /** 所在的省份 */
    open var province: String?
    /** 所在的城市 */
    open var city: String?
    /** 所在的市区 */
    open var district: String?
    /** 新闻的图片列表 */
    open var imgs: [String]?

    public init() {}

    // MARK: JSONEncodable
    func encodeToJSON() -> AnyObject {
        var nillableDictionary = [String:AnyObject?]()
        nillableDictionary["nid"] = self.nid?.encodeToJSON()
        nillableDictionary["url"] = self.url as AnyObject??
        nillableDictionary["docid"] = self.docid as AnyObject??
        nillableDictionary["title"] = self.title as AnyObject??
        nillableDictionary["ptime"] = self.ptime as AnyObject??
        nillableDictionary["pname"] = self.pname as AnyObject??
        nillableDictionary["purl"] = self.purl as AnyObject??
        nillableDictionary["channel"] = self.channel?.encodeToJSON()
        nillableDictionary["collect"] = self.collect?.encodeToJSON()
        nillableDictionary["concern"] = self.concern?.encodeToJSON()
        nillableDictionary["comment"] = self.comment?.encodeToJSON()
        nillableDictionary["style"] = self.style?.encodeToJSON()
        nillableDictionary["province"] = self.province as AnyObject??
        nillableDictionary["city"] = self.city as AnyObject??
        nillableDictionary["district"] = self.district as AnyObject??
        nillableDictionary["imgs"] = self.imgs?.encodeToJSON()
        let dictionary: [String:AnyObject] = APIHelper.rejectNil(nillableDictionary) ?? [:]
        return dictionary as AnyObject
    }
}
