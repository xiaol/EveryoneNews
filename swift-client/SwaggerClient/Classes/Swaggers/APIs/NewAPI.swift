//
// NewAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class NewAPI: APIBase {
    /**
     新闻收藏列表
     
     - parameter uid: (query) 注册用户ID，提供该ID会在响应中设置该用户的点赞标记 upflag (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func nsAuColsGet(uid uid: String? = nil, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        nsAuColsGetWithRequestBuilder(uid: uid).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     新闻收藏列表
     - GET /ns/au/cols
     - 获取用户收藏列表
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter uid: (query) 注册用户ID，提供该ID会在响应中设置该用户的点赞标记 upflag (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func nsAuColsGetWithRequestBuilder(uid uid: String? = nil) -> RequestBuilder<AnyObject> {
        let path = "/ns/au/cols"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "uid": uid
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     新闻详情页
     
     - parameter nid: (query) 新闻ID 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func nsConGet(nid nid: String, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        nsConGetWithRequestBuilder(nid: nid).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     新闻详情页
     - GET /ns/con
     - 从服务器获取 新闻详情页
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter nid: (query) 新闻ID 

     - returns: RequestBuilder<AnyObject> 
     */
    public class func nsConGetWithRequestBuilder(nid nid: String) -> RequestBuilder<AnyObject> {
        let path = "/ns/con"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "nid": nid
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     新闻列表页加载
     
     - parameter cid: (query) 频道id 
     - parameter tcr: (query) 起始时间，13位时间戳 
     - parameter tmk: (query) 是(1)否(0)模拟实时发布时间(部分新闻的发布时间修改为5分钟以内) (optional, default to 1)
     - parameter p: (query) 页数 (optional, default to 1)
     - parameter c: (query) 条数 (optional, default to 20)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func nsFedLGet(cid cid: String, tcr: String, tmk: String? = nil, p: String? = nil, c: String? = nil, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        nsFedLGetWithRequestBuilder(cid: cid, tcr: tcr, tmk: tmk, p: p, c: c).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     新闻列表页加载
     - GET /ns/fed/l
     - 从服务器获取 新闻-列表页加载
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter cid: (query) 频道id 
     - parameter tcr: (query) 起始时间，13位时间戳 
     - parameter tmk: (query) 是(1)否(0)模拟实时发布时间(部分新闻的发布时间修改为5分钟以内) (optional, default to 1)
     - parameter p: (query) 页数 (optional, default to 1)
     - parameter c: (query) 条数 (optional, default to 20)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func nsFedLGetWithRequestBuilder(cid cid: String, tcr: String, tmk: String? = nil, p: String? = nil, c: String? = nil, uid: String? = nil) -> RequestBuilder<AnyObject> {
        let path = "/ns/fed/la"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "cid": Int(cid),
            "tcr": Double(tcr),
            "tmk": Int(tmk ?? "1"),
            "p": p,
            "c": c,
            "uid":Int(uid ?? "1"),
            "b" : self.AdParamBase64String()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     新闻列表页刷新
     
     - parameter cid: (query) 频道id 
     - parameter tcr: (query) 起始时间，13位时间戳 
     - parameter tmk: (query) 是(1)否(0)模拟实时发布时间(部分新闻的发布时间修改为5分钟以内) (optional, default to 1)
     - parameter p: (query) 页数 (optional, default to 1)
     - parameter c: (query) 条数 (optional, default to 20)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func nsFedRGet(cid cid: String, tcr: String, tmk: String? = nil, p: String? = nil, c: String? = nil, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        nsFedRGetWithRequestBuilder(cid: cid, tcr: tcr, tmk: tmk, p: p, c: c).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     新闻列表页刷新
     - GET /ns/fed/r
     - 从服务器获取 新闻-列表页刷新
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter cid: (query) 频道id 
     - parameter tcr: (query) 起始时间，13位时间戳 
     - parameter tmk: (query) 是(1)否(0)模拟实时发布时间(部分新闻的发布时间修改为5分钟以内) (optional, default to 1)
     - parameter p: (query) 页数 (optional, default to 1)
     - parameter c: (query) 条数 (optional, default to 20)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func nsFedRGetWithRequestBuilder(cid cid: String, tcr: String, tmk: String? = nil, p: String? = nil, c: String? = nil,uid: String? = nil) -> RequestBuilder<AnyObject> {
        let path = "/ns/fed/ra"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "cid": Int(cid),
            "tcr": Double(tcr),
            "tmk": Int(tmk ?? "1"),
            "p": p,
            "c": c,
            "uid":Int(uid ?? "1"),
            "b" : self.AdParamBase64String()
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

}



extension NewAPI{

    /**
     获取请求广告的参数，并对其进行base64 编码处理。
     
     - returns: base64 Str
     */
    class func AdParamBase64String () -> String{

//        return "ewogICJkZXZpY2UiIDogewogICAgImlwIiA6ICIyNTUuMjU1LjIxNC4xIiwKICAgICJ1ZGlkIiA6ICI3NDE1ZDZlYjY2YzY0OTA5Njc3MTU5NWEyOTc5ZjhlNyIsCiAgICAib3MiIDogMgogIH0sCiAgImltcHJlc3Npb24iIDogWwogICAgewogICAgICAiaGVpZ2h0IiA6IDU2OCwKICAgICAgImFpZCIgOiAxMDEsCiAgICAgICJ3aWR0aCIgOiAzMjAKICAgIH0KICBdLAogICJ0cyIgOiAxNDczNjUxMTM4Cn0"
        
        let result:NSArray = [[
            "aid" : 101,
            "width" : Int(UIScreen.mainScreen().bounds.width),
            "height": Int(UIScreen.mainScreen().bounds.height),
            ]]
        
        let nillableParameters: NSDictionary = [
//            "version": 1.0,
            "ts": Int(NSDate().timeIntervalSince1970),
            "impression":result,
            "device" :[
                "os":2,
//                "os_version" : "9.0.0",
//                "network" : 1 ,
//                "screen_orientation":1,
//                "brand":"Apple",
//                "device_size": "1280*720",
                "udid" : "7415d6eb66c649096771595a2979f8e7",
                "ip" : "255.255.214.1"
            ]
        ]
        
        let data = try! NSJSONSerialization.dataWithJSONObject(nillableParameters, options: NSJSONWritingOptions.PrettyPrinted)
        
        return data.base64EncodedStringWithOptions(NSDataBase64EncodingOptions.init(rawValue: 0))
    }
}