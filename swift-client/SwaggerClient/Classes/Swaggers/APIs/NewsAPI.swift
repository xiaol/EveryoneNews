//
// NewsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class NewsAPI: APIBase {
    /**
     
     \u65B0\u95FB\u5217\u8868\u9875\u52A0\u8F7D \uFF0D \u4E0A\u62C9\u52A0\u8F7D
     
     - parameter cid: (query) \u9891\u9053ID 
     - parameter tstart: (query) \u8D77\u59CB\u65F6\u95F4 
     - parameter page: (query) \u9875\u6570 (optional)
     - parameter offset: (query) \u6761\u6570 (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func loadGet(cid cid: String, tstart: String, page: String?, offset: String?, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        loadGetWithRequestBuilder(cid: cid, tstart: tstart, page: page, offset: offset).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     \u65B0\u95FB\u5217\u8868\u9875\u52A0\u8F7D \uFF0D \u4E0A\u62C9\u52A0\u8F7D
     
     - GET /load
     - \u65B0\u95FB\u5BA2\u6237\u7AEF-\u4E0A\u62C9\u65B0\u95FB\u5217\u8868\u9875\u52A0\u8F7D
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter cid: (query) \u9891\u9053ID 
     - parameter tstart: (query) \u8D77\u59CB\u65F6\u95F4 
     - parameter page: (query) \u9875\u6570 (optional)
     - parameter offset: (query) \u6761\u6570 (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func loadGetWithRequestBuilder(cid cid: String, tstart: String, page: String?, offset: String?) -> RequestBuilder<AnyObject> {
        let path = "/load"
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "cid": cid,
            "page": page,
            "offset": offset,
            "tstart": tstart
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

    /**
     
     \u65B0\u95FB\u5217\u8868\u9875\u52A0\u8F7D - \u4E0B\u62C9\u5237\u65B0
     
     - parameter cid: (query) \u9891\u9053ID 
     - parameter page: (query) \u9875\u6570 (optional)
     - parameter offset: (query) \u6761\u6570 (optional)
     - parameter tstart: (query) \u8D77\u59CB\u65F6\u95F4 (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func refreshGet(cid cid: String, page: String?, offset: String?, tstart: String?, completion: ((data: AnyObject?, error: ErrorType?) -> Void)) {
        refreshGetWithRequestBuilder(cid: cid, page: page, offset: offset, tstart: tstart).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     
     \u65B0\u95FB\u5217\u8868\u9875\u52A0\u8F7D - \u4E0B\u62C9\u5237\u65B0
     
     - GET /refresh
     - \u65B0\u95FB\u5BA2\u6237\u7AEF-\u4E0B\u62C9\u65B0\u95FB\u5217\u8868\u9875\u5237\u65B0
     - examples: [{contentType=application/json, example="{}"}]
     
     - parameter cid: (query) \u9891\u9053ID 
     - parameter page: (query) \u9875\u6570 (optional)
     - parameter offset: (query) \u6761\u6570 (optional)
     - parameter tstart: (query) \u8D77\u59CB\u65F6\u95F4 (optional)

     - returns: RequestBuilder<AnyObject> 
     */
    public class func refreshGetWithRequestBuilder(cid cid: String, page: String?, offset: String?, tstart: String?) -> RequestBuilder<AnyObject> {
        let path = "/refresh"
        let URLString = SwaggerClientAPI.basePath + path
        
        let nillableParameters: [String:AnyObject?] = [
            "cid": cid,
            "page": page,
            "offset": offset,
            "tstart": tstart
        ]
        let parameters = APIHelper.rejectNil(nillableParameters)

        let requestBuilder: RequestBuilder<AnyObject>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: parameters, isBody: false)
    }

}
